"""
Given an array of integers nums and an integer k. A continuous subarray is called nice if there are k odd numbers on it.

Return the number of nice sub-arrays.

 

Example 1:

Input: nums = [1,1,2,1,1], k = 3
Output: 2
Explanation: The only sub-arrays with 3 odd numbers are [1,1,2,1] and [1,2,1,1].
Example 2:

Input: nums = [2,4,6], k = 1
Output: 0
Explanation: There is no odd numbers in the array.
Example 3:

Input: nums = [2,2,2,1,2,2,1,2,2,2], k = 2
Output: 16

"""


class Solution:
    def numberOfSubarrays(self, nums: List[int], k: int) -> int:
        remainders = []
        rem = 0
        num_subarray = 0
        for num in nums:
            rem += num % 2
            remainders.append(rem)
        prefix = {0: 1}
        for remainder in remainders:
            if remainder - k in prefix:
                num_subarray += prefix[remainder - k]
            if remainder not in prefix:
                prefix[remainder] =1
            else:
                prefix[remainder] += 1
        return num_subarray
