"""
Given the head of a sorted linked list, delete all nodes that have duplicate numbers, leaving only distinct numbers from the original list. Return the linked list sorted as well.

 

Example 1:


Input: head = [1,2,3,3,4,4,5]
Output: [1,2,5]
Example 2:


Input: head = [1,1,1,2,3]
Output: [2,3]

"""

# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def deleteDuplicates(self, head: Optional[ListNode]) -> Optional[ListNode]:
        temp=[]
        itr=head
        while(itr):
            temp.append(itr.val)
            itr=itr.next
        
        dummy=itr=ListNode()
        count=Counter(temp)

        temp=[k for k,v in count.items() if(count[k]==1)]

        for i in temp:
            itr.next=ListNode(i)
            itr=itr.next
        return dummy.next
